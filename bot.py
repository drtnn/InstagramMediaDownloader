import config
import db_work
from download_media import InstagramPost, InstagramStory, InstagramUser
import inline_media
import send_media
import error_users
import urllib


@config.bot.message_handler(commands=['start'])
def start_command(message):  # –ö–æ–º–∞–Ω–¥–∞ /start
	try:
		db_work.update_user(
			message.from_user.id, message.from_user.username, message.from_user.first_name)
	except:
		config.bot.send_message(config.ADMIN, f'[DB ERROR] ‚Äì {message.from_user.id}, {message.from_user.username}, {message.from_user.first_name}')
		error_users.add_error_user(message.from_user.id, message.from_user.username, message.from_user.first_name)
	config.bot.send_message(message.from_user.id, "üôãüèª‚Äç‚ôÇÔ∏è –ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–π –∏–∑ <pre>Instagram</pre>.\n\nüîó –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç, –∏—Å—Ç–æ—Ä–∏—é –∏–ª–∏ –Ω–∏–∫–Ω–µ–π–º.\n\nüí¨ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ /help", parse_mode='html')


@config.bot.message_handler(commands=['help'])
def help_command(message):  # –ö–æ–º–∞–Ω–¥–∞ /help
	config.bot.send_message(message.from_user.id, "üí≠ –°–∫–∞—á–∏–≤–∞—é –≤–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑ <pre>Instagram</pre>.\n\nüîó –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç, –∏—Å—Ç–æ—Ä–∏—é –∏–ª–∏ –Ω–∏–∫–Ω–µ–π–º.\n\n\tüéû: <code>instagram.com/p/*****/</code>\n\tüìπ: <code>instagram.com/stories/drtagram/*****/</code>\n\tüë§: <code>drtagram</code>\n\nüí¨ –ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é –¥—Ä—É–≥—É –≤ –¥–∏–∞–ª–æ–≥, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è <pre>inline</pre>-—Ä–µ–∂–∏–º–æ–º –±–æ—Ç–∞.\n\n\tüéû: <code>@InstagramMediaDownloadBot instagram.com/p/*****/</code>\n\tüìπ: <code>@InstagramMediaDownloadBot instagram.com/stories/drtagram/*****/</code>\n\tüë§: <code>@InstagramMediaDownloadBot drtagram</code>", parse_mode='html')


@config.bot.message_handler(content_types=['text'])
def text_command(message):  # –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç –∏–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	if not ('via_bot' in message.json and message.json['via_bot']['is_bot']):
		if 'instagram.com/' in message.text.lower():
			if 'instagram.com/p/' in message.text.lower() or 'instagram.com/tv/' in message.text.lower():
				send_media.send_post(message.from_user.id, message.text)
			elif 'instagram.com/s/' in message.text.lower() or 'instagram.com/stories/highlights/' in message.text.lower():
				send_media.send_highlights(message.from_user.id, message.text)
			elif 'instagram.com/stories/' in message.text.lower():
				send_media.send_story(message.from_user.id, message.text)
			elif 'instagram.com/' in message.text.lower():
				send_media.send_profile(message.from_user.id, urllib.parse.urlparse(
					message.text)[2].split('/')[1])
		elif InstagramUser(message.text).user_id:
			send_media.send_profile(message.from_user.id, message.text)


@config.bot.inline_handler(func=lambda query: len(query.query) > 0)
def inline_query(query):
	if 'instagram.com/' in query.query.lower():
		if 'instagram.com/p/' in query.query.lower() or 'instagram.com/tv/' in query.query.lower():
			inline_media.inline_post(query.from_user.id, query.query, query.id)
		elif 'instagram.com/s/' in query.query.lower() or 'instagram.com/stories/highlights/' in query.query.lower():
			inline_media.inline_highlight(
				query.from_user.id, query.query, query.id)
		elif 'instagram.com/stories/' in query.query.lower():
			inline_media.inline_story(
				query.from_user.id, query.query, query.id)
		elif 'instagram.com/' in query.query.lower():
			inline_media.inline_profile(query.from_user.id, urllib.parse.urlparse(
				query.query)[2].split('/')[1], query.id)
		else:
			config.bot.answer_inline_query(
				query.id, [inline_media.inline_error()])
	elif InstagramUser(query.query).user_id:
		inline_media.inline_profile(query.from_user.id, query.query, query.id)
	else:
		config.bot.answer_inline_query(query.id, [inline_media.inline_error()])


@config.bot.callback_query_handler(func=lambda c: True)
def inline(c):  # –ù–∞–∂–∞—Ç–∏–µ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–æ–∫
	if c.data.startswith('stories:'):
		send_media.send_stories(c.from_user.id, c.data[8:])


config.bot.send_message(config.ADMIN, "polling restart")
try:
	config.bot.infinity_polling(timeout=5)
except Exception as ex:
	config.bot.send_message(config.ADMIN, ex)
