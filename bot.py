from config import *
from download_media import *

@bot.message_handler(content_types=['text'])
def contentText(message):
	if message.text == '/start':
		bot.send_message(message.chat.id, "<b>–ü—Ä–∏–≤–µ—Ç, —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–∫–∞—á–∞—Ç—å —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ –∏–∑ Instagram</b>\n–ü—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç.", parse_mode='html')
	elif validators.url(message.text) and ('instagram.com/p/' in message.text or 'instagram.com/tv/' in message.text):
		send_media(message)
	else:
		bot.send_message(message.chat.id, "<b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</b>\n–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.", parse_mode='html')

def send_media(message):
	medias =  get_media_json(message.text)
	if not medias:
		bot.send_message(message.chat.id, "<b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</b>\n–í–≤–µ–¥–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ –∏–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–∫—Ä—ã—Ç.", parse_mode='html')
	else:
		medias_content = [ types.InputMediaDocument(media) for media in medias ]
		try:
			bot.send_media_group(message.chat.id, medias_content)
		except:
			text = ''
			for index, media in enumerate(medias):
				text += f'üéû <a href=\'{media}\'>–§–∞–π–ª ‚Ññ{index + 1}</a>\n'
			bot.send_message(message.chat.id, text, parse_mode='html')
				    

bot.send_message(144589481, "polling restart")
try:
    bot.polling(none_stop=True)
except Exception as ex:
    bot.send_message(144589481, ex)
